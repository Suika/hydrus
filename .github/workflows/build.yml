name: buildx
on:
  pull_request:
    types: [closed]
    branches: master
  push:
    branches: master
  workflow_dispatch: []

jobs:
  build-client:
    runs-on: [ubuntu-latest]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      - 
        name: Set env
        run: echo "SOFTWARE_VERSION=v$(grep SOFTWARE_VERSION hydrus/core/HydrusConstants.py | cut -d " " -f 3)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.4.0
        with:
          images: |
            suika/hydrus
            ghcr.io/suika/hydrus
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./docker/client/Dockerfile
          tags: suika/hydrus:latest,ghcr.io/suika/hydrus:latest,suika/hydrus:${{ env.SOFTWARE_VERSION }},ghcr.io/suika/hydrus:${{ env.SOFTWARE_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/386,linux/arm/v7
          cache-from: type=registry,ref=ghcr.io/suika/hydrus:latest
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.title=Hydrus Network
            org.opencontainers.image.vendor=suika
      -
        name: Check manifest
        run: |
          docker buildx imagetools inspect suika/hydrus:latest
          docker buildx imagetools inspect ghcr.io/suika/hydrus:latest
      -
        name: Inspect image
        run: |
          docker pull suika/hydrus:latest
          docker image inspect suika/hydrus:latest
          docker pull ghcr.io/suika/hydrus:latest
          docker image inspect ghcr.io/suika/hydrus:latest
  build-server:
    runs-on: [ubuntu-latest]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
      - 
        name: Set env
        run: echo "SOFTWARE_VERSION=v$(grep SOFTWARE_VERSION hydrus/core/HydrusConstants.py | cut -d " " -f 3)" >> $GITHUB_ENV
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.4.0
        with:
          images: |
            suika/hydrus
            ghcr.io/suika/hydrus
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./docker/server/Dockerfile
          tags: suika/hydrus:server,ghcr.io/suika/hydrus:server,suika/hydrus:server-${{ env.SOFTWARE_VERSION }},ghcr.io/suika/hydrus:server-${{ env.SOFTWARE_VERSION }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/386,linux/arm/v7,linux/arm/v6
          cache-from: type=registry,ref=ghcr.io/suika/hydrus:server
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.title=Hydrus Network
            org.opencontainers.image.vendor=suika
      -
        name: Check manifest
        run: |
          docker buildx imagetools inspect suika/hydrus:server
          docker buildx imagetools inspect ghcr.io/suika/hydrus:server
      -
        name: Inspect image
        run: |
          docker pull suika/hydrus:server
          docker image inspect suika/hydrus:server
          docker pull ghcr.io/suika/hydrus:server
          docker image inspect ghcr.io/suika/hydrus:server